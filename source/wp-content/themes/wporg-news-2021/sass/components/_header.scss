.site-header {
	&-container {
		width: 100%;

		// Don't fix the header on mobile, because screen real estate is limited.
		// Matches the breakpoint for the admin bar.
		@include break-small {
			position: fixed;
		}
	}

	// Since the site header has a dynamic height, depending on the viewport width, this allows us to
	// offset the content by the same amount so it isn't covered by the visible fixed header.
	&-offset {
		display: none;

		@include break-small {
			display: block;
			visibility: hidden; // This removes the element and descendents from the accessibility tree.
		}
	}
}

.local-header {
	// Evidently strings for custom properties can't be concatenated inside a `url()`, which is why each of the
	// color variations has to define its own version of the SVG.
	--bar-background-image: url("assets/svg/brush-stroke-nav-bar-blue-1.svg"),
	url("data:image/svg+xml,%3Csvg height='1000' width='1' version='1.1' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='0' y='0' height='1000' width='1' r='0' rx='0' ry='0' fill='%233e58e1'%3E%3C/rect%3E%3C/svg%3E");
	--bar-text-color: var(--wp--preset--color--white);
	--bar-link-color: var(--wp--preset--color--white);

	min-height: 56px;
	background-image: var(--bar-background-image);
	background-position: 5% bottom, left calc( 100% - 56px );
	background-repeat: repeat-x;
	color: var(--bar-text-color);

	.wp-site-blocks & {
		margin-top: 0;
	}

	svg {
		stroke: var(--bar-text-color);
	}

	// Color variations
	.category-development & {
		--bar-background-image: url("assets/svg/brush-stroke-nav-bar-green.svg"),
		url("data:image/svg+xml,%3Csvg height='1000' width='1' version='1.1' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='0' y='0' height='1000' width='1' r='0' rx='0' ry='0' fill='%2372d1a7'%3E%3C/rect%3E%3C/svg%3E");
		--bar-text-color: var(--wp--preset--color--black);
		--bar-link-color: var(--wp--preset--color--black);
	}

	.category-events & {
		--bar-background-image: url("assets/svg/brush-stroke-nav-bar-white.svg"),
		url("data:image/svg+xml,%3Csvg height='1000' width='1' version='1.1' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='0' y='0' height='1000' width='1' r='0' rx='0' ry='0' fill='%23ffffff'%3E%3C/rect%3E%3C/svg%3E");
		--bar-text-color: var(--wp--preset--color--black);
		--bar-link-color: var(--wp--preset--color--blue-1);
	}

	.category-month-in-wordpress & {
		--bar-background-image: url("assets/svg/brush-stroke-nav-bar-dark-grey.svg"),
		url("data:image/svg+xml,%3Csvg height='1000' width='1' version='1.1' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='0' y='0' height='1000' width='1' r='0' rx='0' ry='0' fill='%2323282d'%3E%3C/rect%3E%3C/svg%3E");
		--bar-text-color: var(--wp--preset--color--white);
		--bar-link-color: var(--wp--preset--color--white);
	}

	.category-security & {
		--bar-background-image: url("assets/svg/brush-stroke-nav-bar-coral-red.svg"),
		url("data:image/svg+xml,%3Csvg height='1000' width='1' version='1.1' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='0' y='0' height='1000' width='1' r='0' rx='0' ry='0' fill='%23f86368'%3E%3C/rect%3E%3C/svg%3E");
		--bar-text-color: var(--wp--preset--color--black);
		--bar-link-color: var(--wp--preset--color--black);
	}

	&__navigation {
		position: relative;

		@include break-mobile {
			display: flex;
			align-items: flex-start;
			justify-content: space-between;
		}

		[class*="wp-container-"] & {
			padding: 15px 0.5em;

			@include break-mobile {
				padding: 0 0.5em;
			}

			@include break-xlarge {
				padding: 0;
			}
		}
	}

	&__breadcrumb {
		color: var(--bar-text-color);

		@include break-mobile {
			line-height: 50px;
		}

		&-current {
			display: inline-block;
			font-family: var(--wp--preset--font-family--inter);
			font-size: 1rem;
			font-weight: 700;

			[class*="wp-container-"] & {
				margin-top: 0;
			}

			&:before {
				content: "\0020\00B7\0020";
			}
		}

		.wp-block-navigation {
			display: inline-block;
		}

		a {
			color: var(--bar-link-color);
		}
	}

	&__categories {
		--flex-items-per-column: 8;

		@include break-medium {
			--flex-items-per-column: 4;
		}

		[class*="wp-container-"] & {
			margin-top: 0;
		}

		// This selector overcomes the overly generic `input[type=checkbox] + label` rule in the reset.
		label#{&}-label {
			display: block;
			color: var(--bar-text-color);
			margin: 0;
			padding: 15px 0;
			cursor: pointer;

			@include break-mobile {
				line-height: 50px;
				padding: 0;
				text-align: right;
			}

			span {
				padding: 0 3px 0 0;
			}

			svg {
				vertical-align: middle;
			}
		}

		&-toggle {
			opacity: 0;
			width: 0;
			height: 0;
			appearance: none;
			position: fixed;

			&:checked {
				& + label {
					@include break-mobile {
						height: calc( 1rem * var(--wp--custom--body--typography--line-height) * var(--flex-items-per-column) + 125px );
					}

					span {
						text-decoration: underline;
					}

					svg {
						transform: rotate( 180deg );
					}
				}

				& ~ .wp-block-categories {
					display: flex;
					opacity: 1;
					animation-duration: 400ms;
					animation-name: categories-fade-in;

					@at-root {
						@keyframes categories-fade-in {
							from {
								opacity: 0;
							}

							to {
								opacity: 1;
							}
						}
					}
				}
			}
		}

		.wp-block-categories {
			display: none;
			opacity: 0;
			flex-direction: column;
			flex-wrap: wrap;
			width: calc( min( 100%, var(--wp--custom--layout--wide-size) ) );
			color: var(--bar-text-color);
			list-style: none;
			padding: 0 0 2em 0;

			@include break-mobile {
				padding: 0 0.5em 0;
				position: absolute;
				left: 0;
				top: 75px;
				max-height: calc( 1rem * var(--wp--custom--body--typography--line-height) * var(--flex-items-per-column) );
			}

			[class*="wp-container-"] & {
				margin-top: 0;
			}

			a {
				color: var(--bar-link-color);
			}

			.current-cat {
				font-weight: 700;

				&:before {
					content: "\0020\00B7\0020";
				}
			}
		}
	}
}
