// Setup the main container to use a flex box-model
// allowing us to simplify the layout and "sticky" bar.
.wp-site-blocks {
	min-height: 100vh;
	display: flex;
	flex-direction: column;
	margin-top: -(var(--wp-admin--admin-bar--height, 0));

	> .site-content-container {
		// Make the content area grow to fill any remaining space on the screen, so that the footer is pushed to
		// the bottom.
		margin-bottom: auto;
	}
}

// The following "placeholder selectors" define many of the layout-related
// styles for various sections of the site.
// Read more here: https://sass-lang.com/documentation/style-rules/placeholder-selectors
%two-column-grid-container {

	@include break-wide() {
		display: grid;
		grid-template-columns:
			calc(var(--wp--custom--layout--content-meta-size) - 32px)
			auto;

		// This defines the minimum horizontal gap. An additional implicit gap is created because the right column
		// contents have a `max-width` and are justified in the center.
		grid-gap: 0 var(--wp--style--block-gap);
	}
}

%two-column-grid-right-column {

	@include break-wide() {
		justify-self: center;
		width: var(--wp--custom--layout--content-size);
		max-width: var(--wp--custom--layout--content-size);
	}
}

%two-column-grid-container-dynamic-rows {

	@extend %two-column-grid-container;

	> * {

		@include break-wide() {
			grid-row: auto;
		}

		&:not(.alignfull):not(.alignwide) {

			@extend %two-column-grid-right-column;

			@include break-wide() {
				grid-column: 2;
			}
		}

		&.alignfull,
		&.alignwide {

			@include break-wide() {
				grid-column: 1 / 3;
			}
		}

		&.alignwide {

			@include break-wide() {
				width: 100%;
				max-width: 100%;
			}
		}

		&.alignfull {

			width: auto;
			max-width: none;
			margin-left: calc(-1 * var(--wp--custom--alignment--edge-spacing)) !important;
			margin-right: calc(-1 * var(--wp--custom--alignment--edge-spacing)) !important;
		}
	}
}

%four-column-grid-container {

	@include break-wide() {
		justify-self: center;
		width: var(--wp--custom--layout--wide-size);
		max-width: var(--wp--custom--layout--wide-size);

		display: grid;
		grid-template-columns: repeat(4, 1fr);

		// This defines the minimum horizontal gap. An additional implicit gap is created because the right column
		// contents have a `max-width` and are justified in the center.
		grid-gap: 0 var(--wp--style--block-gap);
	}
}
